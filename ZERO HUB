-- ZERO HUB - Sistema Avanzado de Auto Quest para First Sea
local QuestTab = Window:NewSection("Auto Quest System")

-- Base de datos completa de NPCs y misiones
local QuestNPCs = {
    {
        Island = "Starter Island",
        NPC = "Starter Quest Giver",
        Level = "0-10",
        Enemies = "Bandidos / Trainees",
        CFrame = CFrame.new(1100, 50, 1550),
        Type = "Starter"
    },
    {
        Island = "Jungle", 
        NPC = "Adventurer",
        Level = "15-30",
        Enemies = "Monkeys, Gorillas, Gorilla King",
        CFrame = CFrame.new(-1500, 70, -200),
        Type = "Normal"
    },
    {
        Island = "Pirate Village",
        NPC = "Pirate Adventurer", 
        Level = "30-60",
        Enemies = "Pirates, Brutes, Bobby (Boss)",
        CFrame = CFrame.new(-1150, 50, 3850),
        Type = "Normal"
    },
    {
        Island = "Desert",
        NPC = "Desert Adventurer",
        Level = "60-90", 
        Enemies = "Desert Bandits, Desert Officers",
        CFrame = CFrame.new(950, 50, 4100),
        Type = "Normal"
    },
    {
        Island = "Frozen Village",
        NPC = "Villager",
        Level = "90-120",
        Enemies = "Snow Bandits, Yeti",
        CFrame = CFrame.new(1150, 150, -1250),
        Type = "Normal"
    },
    {
        Island = "Marine Fortress", 
        NPC = "Vice Admiral's Assistant",
        Level = "120-150",
        Enemies = "Chief Petty Officers, Vice Admiral",
        CFrame = CFrame.new(-4850, 331, -360),
        Type = "Normal"
    },
    {
        Island = "Skylands (Lower)",
        NPC = "Sky Adventurer",
        Level = "150-190",
        Enemies = "Sky Bandits, Dark Masters", 
        CFrame = CFrame.new(-500, 450, -200),
        Type = "Normal"
    },
    {
        Island = "Prison",
        NPC = "Warden",
        Level = "190-250",
        Enemies = "Prisoners, Chief Warden, Warden",
        CFrame = CFrame.new(4900, 50, 500),
        Type = "Boss"
    },
    {
        Island = "Colosseum",
        NPC = "Arena Trainer", 
        Level = "250-300",
        Enemies = "Gladiators",
        CFrame = CFrame.new(-1800, 50, -2200),
        Type = "Arena"
    },
    {
        Island = "Magma Village",
        NPC = "Military Soldier",
        Level = "300+",
        Enemies = "Military Soldiers, Vice Admiral",
        CFrame = CFrame.new(-5500, 80, -1500),
        Type = "Military"
    },
    {
        Island = "Underwater City",
        NPC = "Fishman Warrior",
        Level = "375+", 
        Enemies = "Fishman Warriors, Fishman Lords",
        CFrame = CFrame.new(3500, -200, 1000),
        Type = "Water"
    },
    {
        Island = "Fountain City",
        NPC = "Spy / Detective",
        Level = "625+",
        Enemies = "Galley Pirates, Galley Captains",
        CFrame = CFrame.new(5000, 50, 700),
        Type = "Special"
    }
}

-- Variables globales para Auto Quest
getgenv().AutoQuest = false
getgenv().CurrentQuestNPC = nil

-- Funci√≥n para encontrar NPC m√°s cercano seg√∫n nivel del jugador
function GetOptimalQuestNPC()
    local playerLevel = game:GetService("Players").LocalPlayer.Data.Level.Value
    
    for _, npcData in pairs(QuestNPCs) do
        local minLevel = tonumber(npcData.Level:match("(%d+)"))
        local maxLevel = tonumber(npcData.Level:match("%d+%-(%d+)")) or minLevel + 50
        
        if playerLevel >= minLevel and playerLevel <= maxLevel then
            return npcData
        end
    end
    
    -- Si no encuentra, devuelve el √∫ltimo disponible
    return QuestNPCs[#QuestNPCs]
end

-- Sistema de Auto Quest inteligente
QuestTab:CreateToggle("‚ö° Auto Quest Inteligente", false, function(State)
    getgenv().AutoQuest = State
    
    if State then
        coroutine.wrap(function()
            while getgenv().AutoQuest and wait(3) do
                pcall(function()
                    local optimalNPC = GetOptimalQuestNPC()
                    getgenv().CurrentQuestNPC = optimalNPC
                    
                    -- Teleportar al NPC
                    game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(optimalNPC.CFrame * CFrame.new(0, 0, -5))
                    
                    -- Notificaci√≥n
                    game:GetService("StarterGui"):SetCore("SendNotification",{
                        Title = "üéØ AUTO QUEST",
                        Text = optimalNPC.NPC .. " | Lvl " .. optimalNPC.Level,
                        Duration = 5
                    })
                    
                    -- Esperar y aceptar quest
                    wait(2)
                    -- Aqu√≠ ir√≠a la l√≥gica para aceptar la quest autom√°ticamente
                    
                    -- Buscar y farmear enemigos de la quest
                    FarmQuestEnemies(optimalNPC.Enemies)
                end)
            end
        end)()
    end
end)

-- Funci√≥n para farmear enemigos de la quest
function FarmQuestEnemies(enemyTypes)
    -- L√≥gica mejorada para encontrar y farmear enemigos espec√≠ficos
    local enemies = workspace:FindFirstChild("Enemies")
    if enemies then
        for _, enemy in pairs(enemies:GetChildren()) do
            if enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                for _, enemyType in pairs(string.split(enemyTypes, ", ")) do
                    if string.find(enemy.Name, enemyType) then
                        -- Atacar enemigo
                        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 0, -8))
                        wait(0.5)
                        -- Activar armas
                        for _, tool in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                            if tool:IsA("Tool") then
                                tool:Activate()
                            end
                        end
                        break
                    end
                end
            end
        end
    end
end

-- Selector manual de NPC para quests
local npcOptions = {}
for _, npcData in pairs(QuestNPCs) do
    table.insert(npcOptions, npcData.NPC .. " | " .. npcData.Level)
end

QuestTab:CreateDropdown("üéØ Seleccionar NPC Manual", npcOptions, function(selected)
    for _, npcData in pairs(QuestNPCs) do
        if npcData.NPC .. " | " .. npcData.Level == selected then
            getgenv().CurrentQuestNPC = npcData
            game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(npcData.CFrame * CFrame.new(0, 0, -5))
            
            game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "üéØ TELEPORT NPC",
                Text = npcData.NPC .. " - " .. npcData.Island,
                Duration = 5
            })
            break
        end
    end
end)

-- Panel de informaci√≥n de quests actual
QuestTab:CreateToggle("üìä Mostrar Info Quest Actual", false, function(State)
    getgenv().ShowQuestInfo = State
    
    if State then
        coroutine.wrap(function()
            local screenGui = Instance.new("ScreenGui")
            local textLabel = Instance.new("TextLabel")
            
            screenGui.Parent = game.Players.LocalPlayer.PlayerGui
            textLabel.Parent = screenGui
            
            textLabel.Size = UDim2.new(0, 300, 0, 100)
            textLabel.Position = UDim2.new(0, 10, 0, 10)
            textLabel.BackgroundColor3 = Color3.new(0, 0, 0)
            textLabel.BackgroundTransparency = 0.5
            textLabel.TextColor3 = Color3.new(1, 1, 1)
            textLabel.TextSize = 14
            textLabel.Font = Enum.Font.Gotham
            textLabel.TextWrapped = true
            
            while getgenv().ShowQuestInfo and wait(1) do
                if getgenv().CurrentQuestNPC then
                    textLabel.Text = string.format(
                        "üéØ QUEST ACTUAL\nNPC: %s\nIsla: %s\nNivel: %s\nEnemigos: %s",
                        getgenv().CurrentQuestNPC.NPC,
                        getgenv().CurrentQuestNPC.Island,
                        getgenv().CurrentQuestNPC.Level,
                        getgenv().CurrentQuestNPC.Enemies
                    )
                else
                    textLabel.Text = "üéØ AUTO QUEST\nNo hay quest activa\nActiva Auto Quest para empezar"
                end
            end
            
            screenGui:Destroy()
        end)()
    end
end)

-- Bot√≥n para ver toda la lista de NPCs
QuestTab:CreateButton("üìú Ver Lista Completa de NPCs", function()
    print("\nüéØ ZERO HUB - LISTA COMPLETA DE NPCS:")
    print("======================================")
    
    for i, npc in ipairs(QuestNPCs) do
        print(string.format(
            "\n%d. üå¥ %s\n   üë§ %s\n   üèÖ Nivel: %s\n   ‚öîÔ∏è Enemigos: %s\n   üè∑Ô∏è Tipo: %s",
            i, npc.Island, npc.NPC, npc.Level, npc.Enemies, npc.Type
        ))
    end
    
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = "üìú LISTA NPCS",
        Text = "Revisa la consola (F9)",
        Duration = 5
    })
end)

-- Sistema de recompensa autom√°tica
QuestTab:CreateToggle("üí∞ Auto Reclamar Recompensas", false, function(State)
    getgenv().AutoClaimRewards = State
    
    if State then
        coroutine.wrap(function()
            while getgenv().AutoClaimRewards and wait(10) do
                pcall(function()
                    -- L√≥gica para reclamar recompensas autom√°ticamente
                    -- Esto depende de la estructura espec√≠fica del juego
                    print("üîÑ Verificando recompensas disponibles...")
                end)
            end
        end)()
    end
end)

print("‚úÖ ZERO HUB - Sistema de Auto Quest cargado correctamente!")
print("üìç " .. #QuestNPCs .. " NPCs configurados para First Sea")
